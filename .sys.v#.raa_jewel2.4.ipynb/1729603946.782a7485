{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "85b1d470-bf64-4e4c-96ae-cb582d45343a",
   "metadata": {},
   "outputs": [
    {
     "ename": "ReadError",
     "evalue": "Reading from filename /eos/user/m/mdemelop/Jewel_analysis/yoda_merge_files/simple_0410_j2.4_Pb_5T_worec/['0-10']_raa_R0.4.yoda failed",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mReadError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m/tmp/ipykernel_609/4188217877.py\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     33\u001b[0m \u001b[0;31m# Leitura dos arquivos YODA\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     34\u001b[0m \u001b[0mhistos_pp\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0myoda\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0myodapp\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 35\u001b[0;31m \u001b[0mhistos_PbPb_def_wo\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0myoda\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0myodaPbPb_def_wo\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     36\u001b[0m \u001b[0mhistos_PbPb_def_w\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0myoda\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0myodaPbPb_def_w\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     37\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32minclude/IO.pyx\u001b[0m in \u001b[0;36myoda.core.read\u001b[0;34m()\u001b[0m\n",
      "\u001b[0;31mReadError\u001b[0m: Reading from filename /eos/user/m/mdemelop/Jewel_analysis/yoda_merge_files/simple_0410_j2.4_Pb_5T_worec/['0-10']_raa_R0.4.yoda failed"
     ]
    }
   ],
   "source": [
    "import yoda\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "# Função para obter dados experimentais do ATLAS\n",
    "def DataFromExperiment(file, scatter, min=0, max=0):\n",
    "    data = yoda.read(file)[scatter]\n",
    "    if max == 0:\n",
    "        if scatter == '/REF/ATLAS_2018_I1673184/d19-x01-y01':\n",
    "            max = len(data.xVals()) - 1\n",
    "        else:\n",
    "            max = len(data.xVals())\n",
    "    x = np.asarray(data.xVals())[min:max]\n",
    "    y = np.asarray(data.yVals())[min:max]\n",
    "    err = np.asarray((data.yMaxs() - data.yMins()) / 2)[min:max]\n",
    "    errx = np.asarray((data.xMaxs() - data.xMins()) / 2)[min:max]\n",
    "    return [x, y, err, errx]\n",
    "\n",
    "plt.style.use('plotconfig.mplstyle')\n",
    "\n",
    "# Definição de variáveis e arquivos YODA\n",
    "R = 0.4\n",
    "CENTS = ['0-10']\n",
    "\n",
    "\n",
    "yodapp = '/eos/user/m/mdemelop/Jewel_analysis/yoda_merge_files/pp_j245T_wrec_0410/pp_5020_raa_R' + str(R) + '.yoda'\n",
    "yodaPbPb_def_wo = '/eos/user/m/mdemelop/Jewel_analysis/yoda_merge_files/simple_0410_j2.4_Pb_5T_worec/'+str(CENTS)+'_raa_R' + str(R) + '.yoda'\n",
    "yodaPbPb_def_w = '/eos/user/m/mdemelop/Jewel_analysis/yoda_merge_files/simple_0410_j2.4_Pb_5T_wrec/'+str(CENTS)+'_raa_R' + str(R) + '.yoda'\n",
    "\n",
    "\n",
    "obs = '/USPJWL_JETSPEC/JetpT_R' + str(R)\n",
    "\n",
    "# Leitura dos arquivos YODA\n",
    "histos_pp = yoda.read(yodapp)\n",
    "histos_PbPb_def_wo = yoda.read(yodaPbPb_def_wo)\n",
    "histos_PbPb_def_w = yoda.read(yodaPbPb_def_w)\n",
    "\n",
    "pp_jet = histos_pp[obs]\n",
    "PbPb_jet_def_wo = histos_PbPb_def_wo[obs]\n",
    "PbPb_jet_def_w = histos_PbPb_def_w[obs]\n",
    "\n",
    "# Normalização dos eventos\n",
    "pp_evtc = histos_pp['/_EVTCOUNT'].sumW()\n",
    "pp_xsec = histos_pp['/_XSEC'].point(0).x()\n",
    "pp_jet.scaleW(pp_xsec / pp_evtc)\n",
    "\n",
    "PbPb_evtc_def_wo = histos_PbPb_def_wo['/_EVTCOUNT'].sumW()\n",
    "PbPb_xsec_def_wo = histos_PbPb_def_wo['/_XSEC'].point(0).x()\n",
    "PbPb_jet_def_wo.scaleW(PbPb_xsec_def_wo / PbPb_evtc_def_wo)\n",
    "\n",
    "PbPb_evtc_def_w = histos_PbPb_def_w['/_EVTCOUNT'].sumW()\n",
    "PbPb_xsec_def_w = histos_PbPb_def_w['/_XSEC'].point(0).x()\n",
    "PbPb_jet_def_w.scaleW(PbPb_xsec_def_w / PbPb_evtc_def_w)\n",
    "\n",
    "# Rebin dos dados\n",
    "pp_jet.rebin(2)\n",
    "PbPb_jet_def_wo.rebin(2)\n",
    "PbPb_jet_def_w.rebin(2)\n",
    "\n",
    "# Cálculo do RAA para cada configuração\n",
    "raa_def_wo = PbPb_jet_def_wo / pp_jet\n",
    "raa_def_w = PbPb_jet_def_w / pp_jet\n",
    "\n",
    "# Preparação para o plot\n",
    "fig, ax = plt.subplots(figsize=(6, 4), dpi=300)\n",
    "\n",
    "# Função para plotar uma curva\n",
    "def plot_raa(ax, raa, color, label):\n",
    "    x = np.asarray(raa.xVals())\n",
    "    y = np.asarray(raa.yVals())\n",
    "    yerr = np.asarray((raa.yMaxs() - raa.yMins()) / 2)\n",
    "    xerr = np.asarray((raa.xMaxs() - raa.xMins()) / 2)\n",
    "    ax.errorbar(x, y, yerr=yerr, xerr=xerr, fmt='o', color=color, label=label)\n",
    "\n",
    "# Plotando as curvas\n",
    "plot_raa(ax, raa_def_wo, 'blue', 'PbPb Default w/o Recoils')\n",
    "plot_raa(ax, raa_def_w, 'red', 'PbPb Default w/ Recoils')\n",
    "\n",
    "# Plot dos dados experimentais ATLAS\n",
    "ATLAS1 = DataFromExperiment('/eos/user/m/mdemelop/Jewel_analysis/yoda_merge_files/data/ATLAS_0-10_502_raa.yoda', '/REF/ATLAS_2018_I1673184/d19-x01-y01')\n",
    "ax.errorbar(*ATLAS1, color='black', fmt='s', label='ATLAS', capsize=3)\n",
    "\n",
    "# Definições do gráfico\n",
    "ax.set_xlabel('$p_{T}$ (GeV)')\n",
    "ax.set_ylabel('$R_{AA}$')\n",
    "ax.axhline(y=1.0, color='gray', linestyle='--', alpha=0.6)\n",
    "ax.legend()\n",
    "ax.set_title('RAA PbPb vs pp (0-10% centrality, R=0.4)')\n",
    "ax.set_xlim([50, 500])\n",
    "ax.set_ylim([0, 1.5])\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "da9db4c4-3412-48e9-bbcc-80dca8135930",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
